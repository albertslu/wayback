// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Archive {
  id          String   @id @default(cuid())
  domain      String
  rootUrl     String
  timestamp   DateTime @default(now())
  status      ArchiveStatus @default(PENDING)
  totalPages  Int      @default(0)
  totalAssets Int      @default(0)
  filePath    String   // Base directory path for this archive
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  pages       Page[]
  
  @@map("archives")
}

model Page {
  id          String   @id @default(cuid())
  archiveId   String
  url         String
  title       String?
  filePath    String   // Relative path to the HTML file
  status      PageStatus @default(PENDING)
  linksCount  Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  archive     Archive  @relation(fields: [archiveId], references: [id], onDelete: Cascade)
  assets      Asset[]
  
  @@map("pages")
}

model Asset {
  id          String   @id @default(cuid())
  pageId      String
  type        AssetType
  originalUrl String
  localPath   String   // Path relative to archive directory
  size        Int?     // File size in bytes
  mimeType    String?
  status      AssetStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  page        Page     @relation(fields: [pageId], references: [id], onDelete: Cascade)
  
  @@map("assets")
}

enum ArchiveStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}

enum PageStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}

enum AssetType {
  IMAGE
  STYLESHEET
  SCRIPT
  FONT
  OTHER
}

enum AssetStatus {
  PENDING
  DOWNLOADED
  FAILED
}
